[advice]
  detachedHead = false

[user]
  useConfigOnly = true

[init]
  templatedir = ~/.git_template
  defaultBranch = main

[core]
  excludesfile = ~/.gitignore
  abbrev = 8

[log]
  abbrevcommit = yes

[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto

[branch]
  autosetuprebase = always
  mergeoptions = --no-ff

[push]
  default = tracking

[filter "media"]
  clean = git media clean %f
  smudge = git media smudge %f
  required = true

[merge]
  tool = vimdiff
  conflictstyle = diff3

[rebase]
  autosquash = true

[alias]
  ap = add --patch
  co = checkout
  st = status
  please = push --force-with-lease
  commend = commit --amend --no-edit
  merc = merge --no-ff --no-edit
  rbim = rebase --interactive master
  rbi = rebase --interactive
  rbm = rebase master
  rbc = rebase --continue
  fix = commit --fixup
  wip = commit -m \"wip\"
  rpo = remote prune origin
  rpod = remote prune origin --dry-run
  undo = reset --soft HEAD^
  stash-all = stash save --include-untracked
  exec = "!exec "
  root = rev-parse --show-toplevel
  branches = "for-each-ref --color --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/heads"
  up = !git fetch origin && git rebase $(git rev-parse --abbrev-ref origin/HEAD)
  upi = !git fetch origin && git rebase -i $(git rev-parse --abbrev-ref origin/HEAD)
  wa = "!f() { mkdir -p worktrees ; git worktree add worktrees/$1 $1; cd worktrees/$1 }; f"

[ghq]
  root = ~/dev/src

[ghq "ssh://git@gitlab.com/"]
  vcs = git

[url "git@github.com:"]
  insteadOf = https://github.com/

[includeIf "gitdir:~/dev/src/"]
  path = ~/.gitconfig.sdrbrg

[includeIf "gitdir:~/dev/src/github.com/improbable*/"]
  path = ~/.gitconfig.io

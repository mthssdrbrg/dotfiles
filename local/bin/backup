#!/usr/bin/env bash

exec 2>&1

set -E

trap 'notify-error' ERR

readonly repo_name=$(hostname)
readonly repo="/run/media/$(whoami)/backup/$repo_name"
readonly sync_dst="g:backup/$repo_name"

declare passphrase quiet=0

function notify-error() {
  local msg=$1
  notify-send --urgency critical --app-name "backup" "error during backup"
  exit 1
}

function notify-info() {
  local msg=$1
  if (( quiet == 0 )); then
    notify-send --urgency low --app-name "backup" "$msg"
  fi
}

function main() {
  while (( $# > 0 )); do
    case "$1" in
      -q|--quiet) quiet=1 ;;
      *) echo "unknown option: $1" >&2 ; usage; exit 1 ;;
    esac
    shift
  done

  if [[ ! -d $(dirname $repo) ]]; then
    echo "backup disk isn't mounted, skipping" >&2
    exit 0
  fi

  passphrase="$(secret-tool lookup borg home)"

  if [[ ! -d $repo ]]; then
    echo "repo doesn't exist, aborting" >&2
    exit 1
  elif [[ -z $passphrase ]]; then
    echo "missing passphrase" >&2
    exit 1
  fi

  notify-info "starting backup"

  export BORG_PASSPHRASE="$passphrase"

  borg create \
    --info \
    --stats \
    --numeric-owner \
    --compression zstd \
    --exclude-from "$XDG_CONFIG_HOME/borg/no-backup.lst" \
    --exclude-if-present .no-backup \
    "$repo::{now}"\
    "$HOME"

  notify-info "pruning old backups"

  borg prune \
    --info \
    --list \
    --keep-hourly 24 \
    --keep-daily 7 \
    --keep-weekly 4 \
    --keep-monthly 6 \
    "$repo"

  notify-info "uploading backup"

  borg with-lock "$repo" rclone sync "$repo" "$sync_dst" --progress

  notify-info "finished backup"
}

main $@
